## 1. 조건에 맞는 도서리스트 출력하기
# 날짜 형식 맞추기 DATE_FORMAT('바꾸는열', '%Y-%m-%d') = 2002-12-21


SELECT BOOK_ID, DATE_FORMAT(PUBLISHED_DATE,'%Y-%m-%d') PUBLISHED_DATE
FROM BOOK
WHERE YEAR(PUBLISHED_DATE)=2021  AND (category = '인문')
ORDER BY PUBLISHED_DATE ASC

## 2. 평균 일일 대여 요금 구하기

SELECT ROUND(avg(DAILY_FEE),0) AVERAGE_FEE # 소수 첫번째 자리에서 반올림
FROM CAR_RENTAL_COMPANY_CAR
WHERE CAR_TYPE = 'SUV'


## 3. 자동차 대여 기록에서 장기/단기 대여 구분하기
# 대여기간이 30일 이상 => DATEDIFF(END_DATE,START_DATE)+1 >=30

SELECT HISTORY_ID, CAR_ID, DATE_FORMAT(START_DATE,'%Y-%m-%d') START_DATE, DATE_FORMAT(END_DATE,'%Y-%m-%d') END_DATE,
    CASE WHEN DATEDIFF(END_DATE,START_DATE)+1 >=30 THEN '장기 대여'
    ELSE '단기 대여'
    END
    RENT_TYPE
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
WHERE YEAR(START_DATE) = 2022 AND MONTH(START_DATE) = 09
ORDER BY HISTORY_ID DESC

## 4. 조건에 맞는 도서와 저자 리스트 출력하기
# JOIN 활용하기

SELECT A.BOOK_ID, B.AUTHOR_NAME, DATE_FORMAT(A.PUBLISHED_DATE,'%Y-%m-%d') PUBLISHED_DATE
FROM BOOK A
INNER JOIN AUTHOR B ON A.AUTHOR_ID = B.AUTHOR_ID
WHERE CATEGORY = '경제'
ORDER BY PUBLISHED_DATE ASC

# 5.자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기

SELECT CAR_TYPE, COUNT(*) CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE ('%통풍시트%') OR OPTIONS LIKE ('%열선시트%') OR OPTIONS LIKE ('%가죽시트%')
GROUP BY car_type
ORDER BY CAR_TYPE ASC


+ 정규표현식 방식
select CARTYPE , COUNT(CARTYPE) AS CARS
FROM CARRENTALCOMPANYCAR

WHERE OPTIONS REGEXP '통풍시트|열선시트|가죽시트'
GROUP BY cartype
ORDER BY CAR_TYPE


# 6. 헤비 유저가 소유한 장소

SELECT A.ID, A.NAME, A.HOST_ID
FROM PLACES A
INNER JOIN 
    (SELECT HOST_ID, count(*) HEAVY_CHECK
    FROM PLACES
    GROUP BY HOST_ID
    ) B ON A.HOST_ID = B.HOST_ID
WHERE B.HEAVY_CHECK>=2
ORDER BY ID

SELECT ID, NAME, HOST_ID FROM PLACES
WHERE HOST_ID IN(
    SELECT HOST_ID FROM PLACES
    GROUP BY HOST_ID
    HAVING COUNT(HOST_ID) > 1
)
ORDER BY ID;

## 7.카테고리 별 도서 판매량 집계하기
# 난 쓸데없이 두번 계산하기 만든거임 
SELECT A.CATEGORY, SUM(TOTAL_SALES) TOTAL_SALES
FROM BOOK A
INNER JOIN (
    SELECT BOOK_ID, SUM(SALES) TOTAL_SALES
    FROM BOOK_SALES
    WHERE SALES_DATE LIKE '2022-01%'
    GROUP BY BOOK_ID
    ) B 
    ON A.BOOK_ID = B.BOOK_ID
GROUP BY CATEGORY
ORDER BY CATEGORY ASC

;;;;;;;;; 다른애들이 더 간단하게 하는게 있네 => SUM 사용할때 GROUP 주의

SELECT CATEGORY, SUM(SALES) AS TOTAL_SALES
FROM BOOK_SALES S JOIN BOOK B ON S.BOOK_ID = B.BOOK_ID
WHERE SALES_DATE LIKE '2022-01%'
GROUP BY CATEGORY
ORDER BY 1 ASC
