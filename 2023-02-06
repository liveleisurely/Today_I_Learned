## 정렬1: 가장 큰 수
# 익힌것: sort를 쓸때, lambda: x 를 써서 사용자 정의로 정렬할 수 있음, reverse=True하면 내림차순, 안하면 오름차순
# ex) key = lambda x: x[n] 하면 n번째 인덱스를 기준으로 정렬함
# lambda x: x[0], -x[1] 하면 0 기준으로 오름차순 1기준으로 내림차순 이렇게도 할 수 있음

def solution(numbers):
    answer = ''
    
    temp = [(str(i)*4)[:4] for i in numbers]
    order = sorted(numbers, key = lambda x: int((str(x)*4)[:4]), reverse=True)
    for i in order:
        answer += str(i)
    

    if answer == '0' * len(numbers):
        answer = '0' 
        
    return answer
   
## 정렬2: H-Index
# h-index를 구하기 위해서는 배열을 내림차순으로 바꿔야합니다.
# 그리고 각각의 인덱스와 인덱스에 해당하는 값을 비교해 인덱스가 인덱스에 해당하는 값보다 크거나 같으면 그 값이 h-index입니다.

def solution(citations):
    answer = 0

    citations = sorted(citations,reverse=True)
    
    for idx,value in enumerate(citations):
        if idx >= citations[idx]:
            answer = min(answer, idx)
        else:
            answer = len(citations)
            
    return answer
